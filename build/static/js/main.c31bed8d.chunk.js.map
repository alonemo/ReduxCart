{"version":3,"sources":["components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/ui-slice.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/index.js","index.js","components/Cart/CartItem.module.css"],"names":["module","exports","Card","props","className","classes","card","children","uiSlice","createSlice","name","initialState","cartIsVisible","notification","reducers","toggle","state","showNotification","action","status","payload","title","message","uiActions","actions","cartSlice","items","totalQuantity","changed","replaceCart","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","removeItemFromCart","filter","cartActions","CartItem","total","dispatch","useDispatch","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","cart","map","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitial","App","ui","showCart","useEffect","sendRequest","fetch","method","body","JSON","stringify","ok","Error","sendCartData","fetchData","response","json","data","cartData","store","configureStore","reducer","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c31bed8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__WYS0J\",\"price\":\"ProductItem_price__1GiPR\",\"actions\":\"ProductItem_actions__14Yr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3D5S5\",\"error\":\"Notification_error__2ILHS\",\"success\":\"Notification_success__3Ww1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3nU_b\",\"badge\":\"CartButton_badge__3njqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3GqLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__k5Wsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1PCvW\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState: { cartIsVisible: false, notification: null },\n  reducers: {\n    toggle(state) {\n      state.cartIsVisible = !state.cartIsVisible;\n    },\n\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n  },\n});\n\nexport const uiActions = uiSlice.actions;\nexport default uiSlice;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { uiActions } from './ui-slice';\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false,\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity += 1;\n        existingItem.totalPrice += newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n    },\n  },\n});\n\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(\n      uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data!',\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        'https://react-redux-http-c1c99-default-rtdb.firebaseio.com/cart.json',\n        {\n          method: 'PUT',\n          body: JSON.stringify({\n            items: cart.items,\n            totalQuantity: cart.totalQuantity,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(\n        uiActions.showNotification({\n          status: 'success',\n          title: 'Success!',\n          message: 'Sent cart data successfully!',\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Sending cart data failed!',\n        })\n      );\n    }\n  };\n};\n\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\n        'https://react-redux-http-c1c99-default-rtdb.firebaseio.com/cart.json'\n      );\n\n      if (!response.ok) {\n        throw new Error('Fetching cart data failed.');\n      }\n\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(\n        cartActions.replaceCart({\n          items: cartData.items || [],\n          totalQuantity: cartData.totalQuantity,\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Fetching cart data failed!',\n        })\n      );\n    }\n  };\n};\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n","import classes from './CartItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\n\nconst CartItem = props => {\n  const { title, quantity, total, price, id } = props.item;\n  const dispatch = useDispatch();\n\n  const removeItemHandler = () => {\n    dispatch(cartActions.removeItemFromCart(id));\n  };\n\n  const addItemHadnler = () => {\n    dispatch(\n      cartActions.addItemToCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}>-</button>\n          <button onClick={addItemHadnler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport { useSelector } from 'react-redux';\n\nconst Cart = props => {\n  const cartItems = useSelector(state => state.cart.items);\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map(item => (\n          <CartItem\n          key={item.id}\n            item={{\n              id: item.id,\n              title: item.name,\n              quantity: item.quantity,\n              total: item.totalPrice,\n              price: item.price,\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import classes from './CartButton.module.css';\nimport { uiActions } from '../../store/ui-slice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst CartButton = (props) => {\n\n  const dispatch = useDispatch();\n\n  const cartQuantity = useSelector(state => state.cart.totalQuantity)\n\n  const toggleCartHandler = () => {\n    dispatch(uiActions.toggle());\n  };\n\n  return (\n    <button className={classes.button} onClick={toggleCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { cartActions } from '../../store/cart-slice';\nimport { useDispatch} from 'react-redux';\n\nconst ProductItem = props => {\n  const { title, price, description, id } = props;\n\n  const dispatch = useDispatch();\n\n  const addToCartHandler = () => {\n    dispatch(\n      cartActions.addItemToCart({\n        title,\n        price,\n        id,\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst DUMMY_PRODUCTS = [\n  {\n    id: 'p1',\n    price: 6,\n    title: 'My First Book',\n    description: 'The First Book I Ever Wrote',\n  },\n  {\n    id: 'p2',\n    price: 5,\n    title: 'My Second Book',\n    description: 'The Second Book I Ever Wrote',\n  },\n];\n\nconst Products = props => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map(product => (\n          <ProductItem\n            key={product.id}\n            id={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.description}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\n\nconst Notification = props => {\n  let specialClasses = '';\n\n  if (props.status === 'error') {\n    specialClasses = classes.error;\n  }\n  if (props.status === 'success') {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;\n","import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Fragment, useEffect } from 'react';\nimport Notification from './components/UI/Notification';\nimport { sendCartData } from './store/cart-slice';\nimport { fetchCartData } from './store/cart-slice';\n\nlet isInitial = true; // workaround running useEffect when app starts\n\nfunction App() {\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.ui.notification);\n  const showCart = useSelector(state => state.ui.cartIsVisible); \n  const cart = useSelector(state => state.cart); \n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (cart.changed) {\n      dispatch(sendCartData(cart)); \n    }\n  }, [cart, dispatch]); \n\n  \n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          message={notification.message}\n          title={notification.title}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport uiSlice from \"./ui-slice\";\nimport cartSlice from \"./cart-slice\";\n\nconst store = configureStore({\n    reducer: {\n        ui: uiSlice.reducer,\n        cart: cartSlice.reducer\n    }\n});\n\nexport default store;","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1zMOi\",\"details\":\"CartItem_details__2_Z3n\",\"quantity\":\"CartItem_quantity__DfEXm\",\"price\":\"CartItem_price__2Nl0j\",\"itemprice\":\"CartItem_itemprice__j9ZSt\",\"actions\":\"CartItem_actions__UwVPJ\"};"],"sourceRoot":""}